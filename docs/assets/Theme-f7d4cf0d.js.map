{"version":3,"file":"Theme-f7d4cf0d.js","sources":["../../src/components/wrappers/Theme/Theme.svelte"],"sourcesContent":["<script>\n  import { setContext, getContext } from \"svelte\";\n  import { writable } from \"svelte/store\";\n  import themes from \"./themes.js\";\n\n  /**\n   * Sets the body background to match this theme (only use this at the top level)\n   * @type {boolean}\n   */\n  export let global = false;\n\n  let themeParent = global ? null : getContext(\"theme\");\n\n  /**\n   * Sets a predefined theme\n   * @type {\"light\"|\"dark\"|\"lightblue\"}\n   */\n  export let theme = null;\n  /**\n   * Define additional props to override the base theme\n   * @type {object}\n   */\n  export let overrides = null;\n  /**\n   * Overrides the base theme background (accepts any valid CSS background value)\n   * @type {string}\n   */\n  export let background = overrides?.background || themes[theme]?.background || null;\n\n  const _theme = writable(theme || $themeParent);\n  $: _theme.set(theme || $themeParent);\n\n  setContext(\"theme\", _theme);\n\n  function makeStyle(theme, overrides, background) {\n    if (theme && theme !== $themeParent) {\n      const _theme = themes[theme] || themes.light;\n      if (overrides) Object.keys(overrides).forEach((key) => (_theme[key] = overrides[key]));\n      if (background) _theme.background = background;\n      return Object.keys(_theme)\n        .map((key) => `--${key}: ${_theme[key]};`)\n        .join(\"\");\n    } else if (background) {\n      return `--background:${background}`;\n    }\n    return null;\n  }\n\n  $: style = makeStyle($_theme, overrides, background);\n</script>\n\n<svelte:head>\n  {#if global && background}\n    {@html \"<st\" + `yle>body{background:${background}}</st` + \"yle>\"}\n  {/if}\n</svelte:head>\n\n{#if style}\n  <div class=\"theme-wrapper\" style=\"{style}\">\n    <slot />\n  </div>\n{:else}\n  <slot />\n{/if}\n\n<style>\n  .theme-wrapper {\n    color: var(--text, #222);\n    background: var(--background, none);\n    --ons-color-text: var(--text, --ons-color-text);\n    --ons-color-text-light: var(--muted, --ons-color-text-light);\n    --ons-color-borders: var(--muted, --ons-color-borders);\n  }\n  .theme-wrapper :global(a) {\n    color: var(--link, --ons-color-text-link);\n  }\n  .theme-wrapper :global(a:hover) {\n    text-decoration: underline solid var(--link-hover, --ons-color-text-link-hover) 2px;\n  }\n  .theme-wrapper :global(a:hover) {\n    color: var(--link-hover, --ons-color-text-link-hover);\n  }\n  .theme-wrapper :global(.form-label-bold) {\n    color: var(--text, #222);\n  }\n  .theme-wrapper :global(.form-control) {\n    background: none;\n    border-color: var(--text, #222);\n    color: var(--text, #222);\n  }\n</style>\n"],"names":["ctx","html_tag","raw_value","insert","target","div","anchor","if_block0","create_if_block_1","global","$$props","themeParent","getContext","theme","overrides","background","_a","themes","_theme","writable","$themeParent","setContext","makeStyle","key","$$invalidate","style","$_theme"],"mappings":"+SAqDW,0BAA+BA,EAAU,CAAA,kGAAzC,0BAA+BA,EAAU,CAAA,eAAgBC,EAAA,EAAAC,CAAA,gaAK/BF,EAAK,CAAA,CAAA,UAAxCG,EAEKC,EAAAC,EAAAC,CAAA,wHAF8BN,EAAK,CAAA,CAAA,mGANnCO,EAAAP,MAAUA,EAAU,CAAA,GAAAQ,EAAAR,CAAA,4CAKtBA,EAAK,CAAA,EAAA,0KALHA,MAAUA,EAAU,CAAA,iWA3Cd,CAAA,OAAAS,EAAS,EAAK,EAAAC,EAErBC,EAAcF,EAAS,KAAOG,EAAW,OAAO,qBAMzC,GAAA,CAAA,MAAAC,EAAQ,IAAI,EAAAH,EAKZ,CAAA,UAAAI,EAAY,IAAI,EAAAJ,GAKhB,WAAAK,GAAaD,GAAA,YAAAA,EAAW,eAAcE,EAAAC,EAAOJ,CAAK,IAAZ,YAAAG,EAAe,aAAc,IAAI,EAAAN,EAE5E,MAAAQ,EAASC,EAASN,GAASO,CAAY,qBAG7CC,EAAW,QAASH,CAAM,EAEjB,SAAAI,EAAUT,EAAOC,EAAWC,EAAU,IACzCF,GAASA,IAAUO,EAAY,CAC3B,MAAAF,EAASD,EAAOJ,CAAK,GAAKI,EAAO,MACnC,OAAAH,GAAW,OAAO,KAAKA,CAAS,EAAE,QAASS,GAASL,EAAOK,CAAG,EAAIT,EAAUS,CAAG,CAAA,EAC/ER,IAAYG,EAAO,WAAaH,GAC7B,OAAO,KAAKG,CAAM,EACtB,IAAKK,GAAa,KAAAA,MAAQL,EAAOK,CAAG,IACpC,EAAA,KAAK,EAAE,UACDR,wBACcA,WAElB,8NAfNG,EAAO,IAAIL,GAASO,CAAY,kBAkBlCI,EAAA,EAAEC,EAAQH,EAAUI,EAASZ,EAAWC,CAAU,CAAA"}