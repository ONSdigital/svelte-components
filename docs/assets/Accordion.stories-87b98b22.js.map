{"version":3,"file":"Accordion.stories-87b98b22.js","sources":["../../src/components/layout/Accordion/docs/component.md?raw","../../src/components/layout/Accordion/Accordion.svelte","../../src/js/utils.js","../../src/components/layout/Accordion/AccordionItem.svelte","../../src/components/layout/Accordion/Accordion.stories.svelte"],"sourcesContent":["export default \"An accordion component.\\n\\n```html\\n<script>\\n  import { Accordion } from \\\"@onsvisual/svelte-components\\\";\\n  import { AccordionItem } from \\\"@onsvisual/svelte-components\\\";\\n</script>\\n\\n<Accordion width=\\\"{narrow|medium|wide|full}\\\">\\n  <AccordionItem title=\\\"First item\\\">\\n    <p>Contents of first item.</p>\\n  </AccordionItem>\\n  <AccordionItem title=\\\"Second item\\\">\\n    <p>Contents of second item.</p>\\n  </AccordionItem>\\n</Accordion>\\n```\\n\"","<script>\n  import { setContext } from \"svelte\";\n  import { writable } from \"svelte/store\";\n\n  const elements = writable(new Set());\n  setContext(\"elements\", elements);\n\n  const allOpen = writable(false);\n  setContext(\"allOpen\", allOpen);\n\n  function toggleAll() {\n    $elements.forEach((el) => {\n      el.open = !$allOpen;\n    });\n  }\n\n  /**\n   * Option to include a \"show all\" toggle above the accordion\n   * @type {boolean}\n   */\n  export let showToggle = false;\n</script>\n\n<div id=\"accordion\" class=\"ons-accordion\">\n  {#if showToggle}\n    <button\n      type=\"button\"\n      class=\"ons-btn ons-js-accordion-all ons-u-mb-s ons-btn--secondary ons-btn--small\"\n      on:click=\"{() => toggleAll()}\"\n    >\n      <span class=\"ons-btn__inner ons-js-accordion-all-inner\"\n        ><span class=\"ons-btn__text\">{$allOpen ? \"Hide all\" : \"Show all\"}</span>\n      </span>\n    </button>\n  {/if}\n  <slot />\n</div>\n","// const randomString = () => {\n//   return Math.random().toString(16).slice(2, 8);\n// };\n\nexport const slugify = (str, suffix = true) =>\n  str\n    .toString()\n    .normalize(\"NFD\")\n    .replace(/[\\u0300-\\u036f]/g, \"\")\n    .toLowerCase()\n    .trim()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\");\n// .concat(suffix ? `-${randomString()}` : \"\");\n\nexport const validDate = (str) => {\n  const date = new Date(str);\n  return !isNaN(date);\n};\n\nexport const formatDate = (\n  str,\n  locale = \"en-GB\",\n  opts = { year: \"numeric\", month: \"long\", day: \"2-digit\" }\n) => {\n  const date = new Date(str);\n  return date.toLocaleDateString(locale, opts);\n};\n\nexport const commas = (num) => {\n  const parts = String(num).split(\".\");\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  return parts.join(\".\");\n};\n\nexport const ascending = (a, b) =>\n  a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\nexport const descending = (a, b) =>\n  a == null || b == null ? NaN : b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n","<script>\n  import { onMount, getContext } from \"svelte\";\n  import { slugify } from \"../../../js/utils\";\n\n  /**\n   * A title for the element\n   * @type {string}\n   */\n  export let title = \"Title\";\n  /**\n   * A unique for the element (optional)\n   * @type {string}\n   */\n  export let id = slugify(title);\n  /**\n   * Option for element to be open/expanded by default\n   * @type {boolean}\n   */\n  export let open = false;\n\n  let el;\n\n  const elements = getContext(\"elements\");\n  const allOpen = getContext(\"allOpen\");\n\n  function updateAllOpen(open) {\n    if (el && $elements) {\n      $allOpen = open ? [...$elements].every((el) => el.open) : false;\n    }\n  }\n  $: updateAllOpen(open);\n\n  onMount(() => {\n    $elements.add(el);\n    return () => $elements.delete(el);\n  });\n</script>\n\n<details\n  id=\"accordion-1\"\n  class=\"ons-details ons-js-details ons-details--accordion\"\n  data-group=\"accordion\"\n  bind:this=\"{el}\"\n  bind:open=\"{open}\"\n>\n  <summary class=\"ons-details__heading ons-js-details-heading\">\n    <h2 class=\"ons-details__title\">{title}</h2>\n    <span class=\"ons-details__icon\">\n      <svg\n        class=\"ons-svg-icon\"\n        viewBox=\"0 0 8 13\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        focusable=\"false\"\n        fill=\"currentColor\"\n      >\n        <path\n          d=\"M5.74,14.28l-.57-.56a.5.5,0,0,1,0-.71h0l5-5-5-5a.5.5,0,0,1,0-.71h0l.57-.56a.5.5,0,0,1,.71,0h0l5.93,5.93a.5.5,0,0,1,0,.7L6.45,14.28a.5.5,0,0,1-.71,0Z\"\n          transform=\"translate(-5.02 -1.59)\"></path>\n      </svg>\n    </span>\n  </summary>\n  <div id=\"{id}-content\" class=\"ons-details__content ons-js-details-content\">\n    <slot />\n  </div>\n</details>\n\n<style>\n  .ons-details__heading {\n    color: var(--link, --ons-color-text-link);\n  }\n  .ons-details__heading:hover {\n    color: var(--link, --ons-color-text-link-hover);\n  }\n  .ons-svg-icon {\n    color: var(--link, --ons-color-text-link);\n    fill: var(--link, --ons-color-text-link);\n  }\n  .ons-details__heading:hover:not(:focus) .ons-details__title {\n    text-decoration: underline solid var(--link-hover, --ons-color-text-link-hover) 2px;\n  }\n</style>\n","<script>\n  import { Meta, Template, Story } from \"@storybook/addon-svelte-csf\";\n\n  // @ts-ignore\n  import componentDocs from \"./docs/component.md?raw\";\n  import Accordion from \"./Accordion.svelte\";\n  import AccordionItem from \"./AccordionItem.svelte\";\n  import { withComponentDocs } from \"$lib/docs/utils/withParams.js\";\n</script>\n\n<Meta\n  title=\"Layout/Accordion\"\n  component=\"{Accordion}\"\n  argTypes=\"{{}}\"\n  {...withComponentDocs(componentDocs)}\n/>\n\n<Template let:args>\n  <div style:padding=\"12px\">\n    <Accordion {...args}>\n      <AccordionItem title=\"First item\">\n        <p>Contents of first item.</p>\n      </AccordionItem>\n      <AccordionItem title=\"Second item\">\n        <p>Contents of second item.</p>\n      </AccordionItem>\n    </Accordion>\n  </div>\n</Template>\n\n<Story name=\"Default\" args=\"{{}}\" />\n\n<Story name=\"With 'show all' toggle\" args=\"{{ showToggle: true }}\" />\n"],"names":["componentDocs","ctx","insert","target","button","anchor","append","span1","span0","set_data","t","t_value","create_if_block","div","elements","writable","setContext","allOpen","toggleAll","$elements","el","$allOpen","showToggle","$$props","slugify","str","suffix","details","summary","h2","span","title","id","open","getContext","updateAllOpen","set_store_value","onMount","$$value","p","Accordion","withComponentDocs","dirty","get_spread_object"],"mappings":"gWAAA,MAAeA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BC+BuBC,EAAQ,CAAA,EAAG,WAAa,qRAN1DC,EAQQC,EAAAC,EAAAC,CAAA,EAHNC,EAEMF,EAAAG,CAAA,EADHD,EAAsEC,EAAAC,CAAA,2DAAzCP,EAAQ,CAAA,EAAG,WAAa,aAAUQ,EAAAC,EAAAC,CAAA,sDAPjEV,EAAU,CAAA,GAAAW,EAAAX,CAAA,mJADjBC,EAaKC,EAAAU,EAAAR,CAAA,sDAZEJ,EAAU,CAAA,kQApBTa,EAAWC,EAAQ,IAAK,GAAG,qBACjCC,EAAW,WAAYF,CAAQ,QAEzBG,EAAUF,EAAS,EAAK,qBAC9BC,EAAW,UAAWC,CAAO,WAEpBC,GAAS,CAChBC,EAAU,QAASC,GAAE,CACnBA,EAAG,KAAI,CAAIC,IAQJ,GAAA,CAAA,WAAAC,EAAa,EAAK,EAAAC,cAQRL,gpBCxBhB,MAAMM,GAAU,CAACC,EAAKC,EAAS,KACpCD,EACG,SAAU,EACV,UAAU,KAAK,EACf,QAAQ,mBAAoB,EAAE,EAC9B,YAAa,EACb,KAAM,EACN,QAAQ,OAAQ,GAAG,EACnB,QAAQ,WAAY,EAAE,EACtB,QAAQ,OAAQ,GAAG,4ICiCYxB,EAAK,CAAA,CAAA,qjBAe7BA,EAAE,CAAA,EAAA,UAAA,4LAvBdC,EA0BSC,EAAAwB,EAAAtB,CAAA,EAnBPC,EAeSqB,EAAAC,CAAA,EAdPtB,EAA0CsB,EAAAC,CAAA,gBAC1CvB,EAYMsB,EAAAE,CAAA,SAERxB,EAEKqB,EAAAd,CAAA,gCApBOZ,EAAI,CAAA,+DAGkBA,EAAK,CAAA,CAAA,qFAe7BA,EAAE,CAAA,EAAA,uCAlBAA,EAAI,CAAA,gJAnCL,CAAA,MAAA8B,EAAQ,OAAO,EAAAR,GAKf,GAAAS,EAAKR,GAAQO,CAAK,CAAA,EAAAR,EAKlB,CAAA,KAAAU,EAAO,EAAK,EAAAV,EAEnBH,QAEEN,EAAWoB,EAAW,UAAU,4BAChCjB,EAAUiB,EAAW,SAAS,sBAE3B,SAAAC,EAAcF,EAAI,CACrBb,GAAMD,GACRiB,GAAAnB,EAAAI,EAAWY,EAAW,CAAA,GAAAd,CAAS,EAAE,MAAOC,GAAOA,EAAG,IAAI,EAAI,GAAKC,CAAA,EAKnEgB,GAAO,KACLlB,EAAU,IAAIC,CAAE,MACHD,EAAU,OAAOC,CAAE,8CAQtBA,EAAEkB,wBACFL,EAAI,KAAA,2KAbbE,EAAcF,CAAI,+jCCTf/B,EAA6BC,EAAAoC,EAAAlC,CAAA,gHAG7BH,EAA8BC,EAAAoC,EAAAlC,CAAA,mkBALnBJ,EAAI,CAAA,CAAA,mLADrBC,EASKC,EAAAU,EAAAR,CAAA,8CARYJ,EAAI,CAAA,CAAA,CAAA,CAAA,wNAPTuC,CAAS,gBAEjBC,EAAkBzC,CAAa,wQAkBS,KAAA,CAAA,WAAY,EAAI,4NApBhDwC,CAAS,OAEjBE,EAAA,GAAAC,EAAAF,EAAkBzC,CAAa,CAAA;;;;;;;;;"}