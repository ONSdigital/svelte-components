{"version":3,"file":"Chart.stories-5e63e9f8.js","sources":["../../node_modules/@onsvisual/svelte-charts/src/charts/Chart.svelte","../../src/datavis/Chart/docs/component.md?raw","../../src/datavis/Chart/docs/example.md?raw","../../src/datavis/Chart/Chart.stories.svelte"],"sourcesContent":["<script>\r\n  import BarChart from \"./BarChart.svelte\";\r\n  import ColumnChart from \"./ColumnChart.svelte\";\r\n  import LineChart from \"./LineChart.svelte\";\r\n  import ScatterChart from \"./ScatterChart.svelte\";\r\n  import DotPlotChart from \"./DotPlotChart.svelte\";\r\n\r\n  /**\r\n   * An alternative way to pass in all of the chart props as a single object {chartType, data, ...options}\r\n   * @type {object|null}\r\n   */\r\n   export let section = null;\r\n  /**\r\n   * Type of chart\r\n   * @type {\"bar\"|\"column\"|\"line\"|\"scatter\"|\"dotplot\"|\"bar-highlight\"|\"column-highlight\"|\"line-highlight\"|\"scatter-highlight\"}\r\n   */\r\n  export let type = section?.chartType;\r\n  /**\r\n   * The data array for the chart (equivalent to parsed rows of a CSV)\r\n   * @type {array|null}\r\n   */\r\n  export let data = null;\r\n  /**\r\n   * Options for the chart as key:value pairs\r\n   * @type {object|null}\r\n   */\r\n  export let options = null;\r\n\r\n  const directions = [\"left\", \"right\", \"top\", \"bottom\"];\r\n  const regex = /^\\[(?:'[^']*'|\"[^\"]*\"|\\d+(?:\\.\\d+)?)(,?)*]$/;//this regex looks for an array\r\n\r\n  function makeProps(type, data, options, section) {\r\n    if (!section) section = {chartType: type, data, ...options};\r\n    let props = {};\r\n    let padding = {left: 50, right: 0, top: 0, bottom: 20};\r\n    let keys = Object.keys(section).filter(key => ![\r\n      \"type\", \"chartType\", ...directions.map(dir => `padding-${dir}`)\r\n    ].includes(key));\r\n    keys.forEach(key => {\r\n      if(regex.test(section[key])){//this test if the string looks like an array\r\n        props[key]=JSON.parse(section[key])//if it's an array, parse as an array\r\n      }else{\r\n        props[key]= section[key]\r\n      }\r\n    }\r\n    );\r\n    if (Array.isArray(section.data)) {\r\n      let dims = Object.keys(section.data[0]);\r\n      dims.forEach(dim => {\r\n        if([\"x\",\"y\",\"z\",\"r\"].includes(dim)){//if the key is either, x,y,z or r, add the string 'key' to it for the props object\r\n          props[`${dim}Key`] = dim\r\n        }else{\r\n          props[dim] = dim\r\n        }\r\n      });\r\n    }\r\n    directions.forEach(dir => {\r\n      if (section[`padding-${dir}`]) padding[dir] = section[`padding-${dir}`];\r\n    });\r\n    props.padding = padding;\r\n    if (!props.legend && props.legend !== false) props.legend = props.zKey ? true : false;\r\n    return props;\r\n  }\r\n\r\n  $: props = makeProps(type, data, options, section);\r\n</script>\r\n\r\n{#if props}\r\n{#key props.data}\r\n  {#if type.toLowerCase() === \"bar\" && props.xKey && props.yKey}\r\n  <BarChart {...props}/>\r\n  {:else if type.toLowerCase() === \"bar-highlight\" && props.xKey && props.yKey}\r\n  <BarChart {...props} color=\"#bbb\" colorSelect=\"#206095\" colorHighlight=\"grey\" overlayFill={true}/>\r\n  {:else if type.toLowerCase() === \"column\" && props.xKey && props.yKey}\r\n  <ColumnChart {...props}/>\r\n  {:else if type.toLowerCase() === \"column-highlight\" && props.xKey && props.yKey}\r\n  <ColumnChart {...props} color=\"#bbb\" colorSelect=\"#206095\" colorHighlight=\"grey\" overlayFill={true}/>\r\n  {:else if type.toLowerCase() === \"line\" && props.xKey && props.yKey}\r\n  <LineChart {...props} area={false}/>\r\n  {:else if type.toLowerCase() === \"line-highlight\" && props.xKey && props.yKey}\r\n  <LineChart {...props} area={false} color=\"#bbb\" lineWidth={1} legend={false} snapTicks={false} hover labels/>\r\n  {:else if type.toLowerCase() === \"scatter\" && props.xKey}\r\n  <ScatterChart {...props}/>\r\n  {:else if type.toLowerCase() === \"scatter-highlight\" && props.xKey}\r\n  <ScatterChart {...props} color=\"#bbb\" colorSelect=\"#206095\" colorHighlight=\"grey\" overlayFill={true} hover labels/>\r\n  {:else if type.toLowerCase() === \"dotplot\" && props.xKey && props.yKey}\r\n  <DotPlotChart {...props}/>\r\n  {/if}\r\n{/key}\r\n{/if}\r\n","export default \"A wrapper component that offers a simplified way to use charts with sensible preset defaults.\\n\\nThe config for this component can either be defined via `type`, `data` and `options` props, or via a single comboned `section` object. The latter use case is optimised for robo-journalism projects (see second example below).\\n\\nNote: This component is part of the **@onsvisual/svelte-charts** library. See [more examples here](https://onsvisual.github.io/svelte-charts/).\\n\\n<!-- prettier-ignore -->\\n```html\\n<script>\\n  import { Chart } from \\\"@onsvisual/svelte-charts\\\";\\n\\n  const data = [\\n    {\\\"x\\\": 5315, \\\"y\\\": \\\"Portsmouth\\\"},\\n    {\\\"x\\\": 5070, \\\"y\\\": \\\"Southampton\\\"},\\n    {\\\"x\\\": 4596, \\\"y\\\": \\\"Slough\\\"},\\n    {\\\"x\\\": 3969, \\\"y\\\": \\\"Reading\\\"},\\n    {\\\"x\\\": 3522, \\\"y\\\": \\\"Brighton and Hove\\\"}\\n  ];\\n  const options = {\\n    \\\"id\\\": \\\"chart-density\\\",\\n    \\\"title\\\": \\\"Densest local authorities in the South East, 2020\\\",\\n    \\\"footer\\\": \\\"Source: Office for National Statistics\\\",\\n    \\\"padding-left\\\": \\\"120\\\"\\n  };\\n</script>\\n\\n<Chart\\n  type=\\\"bar\\\"\\n  data=\\\"{data}\\\"\\n  options=\\\"{options}\\\"/>\\n```\\n\"","export default \"In this use case, all of the data and config are passed into the component via a single `section` prop.\\n\\nThis is optimised for robo-journalism projects, where a chart is defined within a section block in a PUG template. The component is used in this way within the [robo-embed](https://github.com/ONSvisual/robo-embed/) and [robo-article](https://github.com/ONSvisual/robo-article/) templates.\\n\\n<!-- prettier-ignore -->\\n```html\\n<script>\\n  import { Chart } from \\\"@onsvisual/svelte-charts\\\";\\n\\n  //the section is normally generated by the pug file\\n  const section = {\\n    \\\"id\\\": \\\"chart-density\\\",\\n    \\\"chartType\\\": \\\"bar\\\",\\n    \\\"title\\\": \\\"Densest local authorities in the South East, 2020\\\",\\n    \\\"footer\\\": \\\"Source: Office for National Statistics\\\",\\n    \\\"data\\\": [\\n      {\\\"x\\\": 5315, \\\"y\\\": \\\"Portsmouth\\\"},\\n      {\\\"x\\\": 5070, \\\"y\\\": \\\"Southampton\\\"},\\n      {\\\"x\\\": 4596, \\\"y\\\": \\\"Slough\\\"},\\n      {\\\"x\\\": 3969, \\\"y\\\": \\\"Reading\\\"},\\n      {\\\"x\\\": 3522, \\\"y\\\": \\\"Brighton and Hove\\\"}\\n    ],\\n    \\\"padding-left\\\": \\\"120\\\"\\n  };\\n</script>\\n\\n<Chart {section}/>\\n```\\n\"","<script>\n  import { Meta, Template, Story } from \"@storybook/addon-svelte-csf\";\n\n  // @ts-ignore\n  import componentDocs from \"./docs/component.md?raw\";\n  import exampleDocs from \"./docs/example.md?raw\";\n  import { Chart } from \"@onsvisual/svelte-charts\";\n  import { withComponentDocs, withStoryDocs } from \"../../js/withParams.js\";\n\n  const barData = [\n    { x: 5315, y: \"Portsmouth\" },\n    { x: 5070, y: \"Southampton\" },\n    { x: 4596, y: \"Slough\" },\n    { x: 3969, y: \"Reading\" },\n    { x: 3522, y: \"Brighton and Hove\" },\n  ];\n  const lineData = [\n    { z: \"West Oxfordshire\", x: \"2002\", y: 95961 },\n    { z: \"West Oxfordshire\", x: \"2003\", y: 97083 },\n    { z: \"West Oxfordshire\", x: \"2004\", y: 98038 },\n    { z: \"West Oxfordshire\", x: \"2005\", y: 98869 },\n    { z: \"West Oxfordshire\", x: \"2006\", y: 100316 },\n    { z: \"West Oxfordshire\", x: \"2007\", y: 102166 },\n    { z: \"West Oxfordshire\", x: \"2008\", y: 103016 },\n    { z: \"West Oxfordshire\", x: \"2009\", y: 103824 },\n    { z: \"West Oxfordshire\", x: \"2010\", y: 104706 },\n    { z: \"West Oxfordshire\", x: \"2011\", y: 105442 },\n    { z: \"West Oxfordshire\", x: \"2012\", y: 107164 },\n    { z: \"West Oxfordshire\", x: \"2013\", y: 107945 },\n    { z: \"West Oxfordshire\", x: \"2014\", y: 108095 },\n    { z: \"West Oxfordshire\", x: \"2015\", y: 108609 },\n    { z: \"West Oxfordshire\", x: \"2016\", y: 108748 },\n    { z: \"West Oxfordshire\", x: \"2017\", y: 109266 },\n    { z: \"West Oxfordshire\", x: \"2018\", y: 109800 },\n    { z: \"West Oxfordshire\", x: \"2019\", y: 110643 },\n    { z: \"West Oxfordshire\", x: \"2020\", y: 111758 },\n    { z: \"South Oxfordshire\", x: \"2002\", y: 128754 },\n    { z: \"South Oxfordshire\", x: \"2003\", y: 128920 },\n    { z: \"South Oxfordshire\", x: \"2004\", y: 129359 },\n    { z: \"South Oxfordshire\", x: \"2005\", y: 130050 },\n    { z: \"South Oxfordshire\", x: \"2006\", y: 130676 },\n    { z: \"South Oxfordshire\", x: \"2007\", y: 131626 },\n    { z: \"South Oxfordshire\", x: \"2008\", y: 132611 },\n    { z: \"South Oxfordshire\", x: \"2009\", y: 133466 },\n    { z: \"South Oxfordshire\", x: \"2010\", y: 133915 },\n    { z: \"South Oxfordshire\", x: \"2011\", y: 134961 },\n    { z: \"South Oxfordshire\", x: \"2012\", y: 135722 },\n    { z: \"South Oxfordshire\", x: \"2013\", y: 136328 },\n    { z: \"South Oxfordshire\", x: \"2014\", y: 137477 },\n    { z: \"South Oxfordshire\", x: \"2015\", y: 138177 },\n    { z: \"South Oxfordshire\", x: \"2016\", y: 139156 },\n    { z: \"South Oxfordshire\", x: \"2017\", y: 139767 },\n    { z: \"South Oxfordshire\", x: \"2018\", y: 140504 },\n    { z: \"South Oxfordshire\", x: \"2019\", y: 142057 },\n    { z: \"South Oxfordshire\", x: \"2020\", y: 143782 },\n    { z: \"Winchester\", x: \"2002\", y: 107844 },\n    { z: \"Winchester\", x: \"2003\", y: 108515 },\n    { z: \"Winchester\", x: \"2004\", y: 109179 },\n    { z: \"Winchester\", x: \"2005\", y: 109947 },\n    { z: \"Winchester\", x: \"2006\", y: 110628 },\n    { z: \"Winchester\", x: \"2007\", y: 111820 },\n    { z: \"Winchester\", x: \"2008\", y: 113267 },\n    { z: \"Winchester\", x: \"2009\", y: 114505 },\n    { z: \"Winchester\", x: \"2010\", y: 115789 },\n    { z: \"Winchester\", x: \"2011\", y: 116820 },\n    { z: \"Winchester\", x: \"2012\", y: 118074 },\n    { z: \"Winchester\", x: \"2013\", y: 119037 },\n    { z: \"Winchester\", x: \"2014\", y: 120290 },\n    { z: \"Winchester\", x: \"2015\", y: 121734 },\n    { z: \"Winchester\", x: \"2016\", y: 123100 },\n    { z: \"Winchester\", x: \"2017\", y: 123879 },\n    { z: \"Winchester\", x: \"2018\", y: 124295 },\n    { z: \"Winchester\", x: \"2019\", y: 124859 },\n    { z: \"Winchester\", x: \"2020\", y: 125925 },\n  ];\n</script>\n\n<Meta\n  title=\"Data visualisation/Chart\"\n  component=\"{Chart}\"\n  argTypes=\"{{\n    type: {\n      options: [\n        'bar',\n        'column',\n        'line',\n        'scatter',\n        'dotplot',\n        'bar-highlight',\n        'column-highlight',\n        'line-highlight',\n        'scatter-highlight',\n      ],\n      control: { type: 'select' },\n    },\n  }}\"\n  {...withComponentDocs(componentDocs)}\n/>\n\n<Template let:args>\n  <div style:padding=\"12px\">\n    <Chart {...args} />\n  </div>\n</Template>\n\n<Story\n  name=\"Bar\"\n  args=\"{{\n    type: 'bar',\n    data: barData,\n    options: {\n      id: 'chart-density',\n      title: 'Densest local authorities in the South East, 2020',\n      footer: 'Source: Office for National Statistics',\n      'padding-left': '120',\n    },\n  }}\"\n/>\n\n<Story\n  name=\"Bar, robo-journalism case\"\n  args=\"{{\n    section: {\n      id: 'chart-density',\n      chartType: 'bar',\n      data: barData,\n      title: 'Densest local authorities in the South East, 2020',\n      footer: 'Source: Office for National Statistics',\n      'padding-left': '120',\n    },\n  }}\"\n  {...withStoryDocs(exampleDocs)}\n/>\n\n<Story\n  name=\"Line with highlight\"\n  args=\"{{\n    section: {\n      id: 'chart-timeseries',\n      chartType: 'line-highlight',\n      title: 'Largest local authorities in the South East, 2002-2020',\n      footer: 'Source: Office for National Statistics',\n      data: lineData,\n      selected: 'Winchester',\n      'padding-top': '20',\n      'padding-right': '120',\n      'padding-left': '80',\n    },\n  }}\"\n/>\n"],"names":["previous_key","ctx","dirty","safe_not_equal","linechart_spread_levels","show_if_6","show_if_7","create_if_block","regex","section","$$props","type","data","options","directions","makeProps","props","padding","key","dir","dim","$$invalidate","componentDocs","exampleDocs","insert","target","div","anchor","Chart","withComponentDocs","withStoryDocs","get_spread_object"],"mappings":"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AAG,OAAQ,EAAG,QACrC,EAAG,mBAAoB,EAAG,OAAQ,EAAG,QACrC,EAAG,mBAAoB,EAAG,OAAQ,EAAG,QACrC,EAAG,mBAAoB,EAAG,OAAQ,EAAG,SACrC,EAAG,mBAAoB,EAAG,OAAQ,EAAG,SACrC,EAAG,mBAAoB,EAAG,OAAQ,EAAG,SACrC,EAAG,mBAAoB,EAAG,OAAQ,EAAG,SACrC,EAAG,mBAAoB,EAAG,OAAQ,EAAG,SACrC,EAAG,mBAAoB,EAAG,OAAQ,EAAG,SACrC,EAAG,mBAAoB,EAAG,OAAQ,EAAG,SACrC,EAAG,mBAAoB,EAAG,OAAQ,EAAG,SACrC,EAAG,mBAAoB,EAAG,OAAQ,EAAG,SACrC,EAAG,mBAAoB,EAAG,OAAQ,EAAG,SACrC,EAAG,mBAAoB,EAAG,OAAQ,EAAG,SACrC,EAAG,mBAAoB,EAAG,OAAQ,EAAG,SACrC,EAAG,mBAAoB,EAAG,OAAQ,EAAG,SACrC,EAAG,mBAAoB,EAAG,OAAQ,EAAG,SACrC,EAAG,mBAAoB,EAAG,OAAQ,EAAG,SACrC,EAAG,oBAAqB,EAAG,OAAQ,EAAG,SACtC,EAAG,oBAAqB,EAAG,OAAQ,EAAG,SACtC,EAAG,oBAAqB,EAAG,OAAQ,EAAG,SACtC,EAAG,oBAAqB,EAAG,OAAQ,EAAG,SACtC,EAAG,oBAAqB,EAAG,OAAQ,EAAG,SACtC,EAAG,oBAAqB,EAAG,OAAQ,EAAG,SACtC,EAAG,oBAAqB,EAAG,OAAQ,EAAG,SACtC,EAAG,oBAAqB,EAAG,OAAQ,EAAG,SACtC,EAAG,oBAAqB,EAAG,OAAQ,EAAG,SACtC,EAAG,oBAAqB,EAAG,OAAQ,EAAG,SACtC,EAAG,oBAAqB,EAAG,OAAQ,EAAG,SACtC,EAAG,oBAAqB,EAAG,OAAQ,EAAG,SACtC,EAAG,oBAAqB,EAAG,OAAQ,EAAG,SACtC,EAAG,oBAAqB,EAAG,OAAQ,EAAG,SACtC,EAAG,oBAAqB,EAAG,OAAQ,EAAG,SACtC,EAAG,oBAAqB,EAAG,OAAQ,EAAG,SACtC,EAAG,oBAAqB,EAAG,OAAQ,EAAG,SACtC,EAAG,oBAAqB,EAAG,OAAQ,EAAG,SACtC,EAAG,oBAAqB,EAAG,OAAQ,EAAG,SACtC,EAAG,aAAc,EAAG,OAAQ,EAAG,MAAM,GACrC,EAAG,aAAc,EAAG,OAAQ,EAAG,MAAM,GACrC,EAAG,aAAc,EAAG,OAAQ,EAAG,MAAM,GACrC,EAAG,aAAc,EAAG,OAAQ,EAAG,MAAM,GACrC,EAAG,aAAc,EAAG,OAAQ,EAAG,MAAM,GACrC,EAAG,aAAc,EAAG,OAAQ,EAAG,MAAM,GACrC,EAAG,aAAc,EAAG,OAAQ,EAAG,MAAM,GACrC,EAAG,aAAc,EAAG,OAAQ,EAAG,MAAM,GACrC,EAAG,aAAc,EAAG,OAAQ,EAAG,MAAM,GACrC,EAAG,aAAc,EAAG,OAAQ,EAAG,MAAM,GACrC,EAAG,aAAc,EAAG,OAAQ,EAAG,MAAM,GACrC,EAAG,aAAc,EAAG,OAAQ,EAAG,MAAM,GACrC,EAAG,aAAc,EAAG,OAAQ,EAAG,MAAM,GACrC,EAAG,aAAc,EAAG,OAAQ,EAAG,MAAM,GACrC,EAAG,aAAc,EAAG,OAAQ,EAAG,MAAM,GACrC,EAAG,aAAc,EAAG,OAAQ,EAAG,MAAM,GACrC,EAAG,aAAc,EAAG,OAAQ,EAAG,MAAM,GACrC,EAAG,aAAc,EAAG,OAAQ,EAAG,MAAM,GACrC,EAAG,aAAc,EAAG,OAAQ,EAAG,MAAM;;","x_google_ignoreList":[0]}