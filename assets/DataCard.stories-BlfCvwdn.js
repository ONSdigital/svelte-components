import{p as Z,a as y,j as C,f as R,k as w,n as k,t as P,o as B,e as $,h as z,q as A,g as K,i as N}from"./iframe-DJCmgmUg.js";import{i as Q,w as W,c as tt,d as et,a as nt}from"./create-runtime-stories-j_K_dLYm.js";import{h as it}from"./html-hGL2ERH0.js";import{C as at}from"./Card-CxiB5Wdk.js";import{e as st,i as rt}from"./each-1gNA1L-4.js";import{s as ot}from"./attributes-DrByrOzK.js";import{s as lt}from"./class-Dzh9Da8g.js";import{s as ut}from"./style-CcY6orqc.js";import{l as j}from"./linear-CZTuTj73.js";import{d as dt}from"./data-scatter-DUgoSHHp.js";import"./slot-BP_Qo1ZM.js";import"./GridCell-BwpiAstn.js";import"./attributes-Co-1QMVx.js";function E(i){return function(){return i}}const L=Math.PI,I=2*L,D=1e-6,pt=I-D;function U(i){this._+=i[0];for(let t=1,e=i.length;t<e;++t)this._+=arguments[t]+i[t]}function ct(i){let t=Math.floor(i);if(!(t>=0))throw new Error(`invalid digits: ${i}`);if(t>15)return U;const e=10**t;return function(n){this._+=n[0];for(let s=1,r=n.length;s<r;++s)this._+=Math.round(arguments[s]*e)/e+n[s]}}class ft{constructor(t){this._x0=this._y0=this._x1=this._y1=null,this._="",this._append=t==null?U:ct(t)}moveTo(t,e){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+e}`}closePath(){this._x1!==null&&(this._x1=this._x0,this._y1=this._y0,this._append`Z`)}lineTo(t,e){this._append`L${this._x1=+t},${this._y1=+e}`}quadraticCurveTo(t,e,n,s){this._append`Q${+t},${+e},${this._x1=+n},${this._y1=+s}`}bezierCurveTo(t,e,n,s,r,c){this._append`C${+t},${+e},${+n},${+s},${this._x1=+r},${this._y1=+c}`}arcTo(t,e,n,s,r){if(t=+t,e=+e,n=+n,s=+s,r=+r,r<0)throw new Error(`negative radius: ${r}`);let c=this._x1,o=this._y1,a=n-t,l=s-e,f=c-t,p=o-e,d=f*f+p*p;if(this._x1===null)this._append`M${this._x1=t},${this._y1=e}`;else if(d>D)if(!(Math.abs(p*a-l*f)>D)||!r)this._append`L${this._x1=t},${this._y1=e}`;else{let m=n-c,x=s-o,T=a*a+l*l,V=m*m+x*x,h=Math.sqrt(T),v=Math.sqrt(d),b=r*Math.tan((L-Math.acos((T+d-V)/(2*h*v)))/2),_=b/v,S=b/h;Math.abs(_-1)>D&&this._append`L${t+_*f},${e+_*p}`,this._append`A${r},${r},0,0,${+(p*m>f*x)},${this._x1=t+S*a},${this._y1=e+S*l}`}}arc(t,e,n,s,r,c){if(t=+t,e=+e,n=+n,c=!!c,n<0)throw new Error(`negative radius: ${n}`);let o=n*Math.cos(s),a=n*Math.sin(s),l=t+o,f=e+a,p=1^c,d=c?s-r:r-s;this._x1===null?this._append`M${l},${f}`:(Math.abs(this._x1-l)>D||Math.abs(this._y1-f)>D)&&this._append`L${l},${f}`,n&&(d<0&&(d=d%I+I),d>pt?this._append`A${n},${n},0,1,${p},${t-o},${e-a}A${n},${n},0,1,${p},${this._x1=l},${this._y1=f}`:d>D&&this._append`A${n},${n},0,${+(d>=L)},${p},${this._x1=t+n*Math.cos(r)},${this._y1=e+n*Math.sin(r)}`)}rect(t,e,n,s){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+e}h${n=+n}v${+s}h${-n}Z`}toString(){return this._}}function ht(i){let t=3;return i.digits=function(e){if(!arguments.length)return t;if(e==null)t=null;else{const n=Math.floor(e);if(!(n>=0))throw new RangeError(`invalid digits: ${e}`);t=n}return i},()=>new ft(t)}function mt(i){return typeof i=="object"&&"length"in i?i:Array.from(i)}function X(i){this._context=i}X.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line=1-this._line},point:function(i,t){switch(i=+i,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(i,t):this._context.moveTo(i,t);break;case 1:this._point=2;default:this._context.lineTo(i,t);break}}};function vt(i){return new X(i)}function _t(i){return i[0]}function yt(i){return i[1]}function gt(i,t){var e=E(!0),n=null,s=vt,r=null,c=ht(o);i=typeof i=="function"?i:i===void 0?_t:E(i),t=typeof t=="function"?t:t===void 0?yt:E(t);function o(a){var l,f=(a=mt(a)).length,p,d=!1,m;for(n==null&&(r=s(m=c())),l=0;l<=f;++l)!(l<f&&e(p=a[l],l,a))===d&&((d=!d)?r.lineStart():r.lineEnd()),d&&r.point(+i(p,l,a),+t(p,l,a));if(m)return r=null,m+""||null}return o.x=function(a){return arguments.length?(i=typeof a=="function"?a:E(+a),o):i},o.y=function(a){return arguments.length?(t=typeof a=="function"?a:E(+a),o):t},o.defined=function(a){return arguments.length?(e=typeof a=="function"?a:E(!!a),o):e},o.curve=function(a){return arguments.length?(s=a,n!=null&&(r=s(n)),o):s},o.context=function(a){return arguments.length?(a==null?n=r=null:r=s(n=a),o):n},o}var bt=C('<div><span class="ons-u-fs-s"> </span><br/><span class="x-tick--value svelte-1o1v576"> </span></div>'),kt=C('<div class="sparkline-container svelte-1o1v576"><div class="sparkline-point svelte-1o1v576"></div> <svg class="sparkline-chart svelte-1o1v576" viewBox="0 0 100 100" preserveAspectRatio="none"><path class="sparkline svelte-1o1v576"></path></svg></div> <div class="x-ticks svelte-1o1v576"></div>',1);function Y(i,t){Z(t,!1);let e=y(t,"data",8),n=y(t,"xKey",8,"x"),s=y(t,"yKey",8,"y");function r(h,v){const b=h.map(_=>_[v]);return[Math.min(...b),Math.max(...b)]}const c=[e()[0][n()],e()[e().length-1][n()]],o=r(e(),s()),a=j().domain(c).range([0,100]),l=j().domain(o).range([100,0]),f=gt().x(h=>a(h[n()])).y(h=>l(h[s()]));Q();var p=kt(),d=R(p),m=k(d),x=w(m,2),T=k(x),V=w(d,2);st(V,5,()=>[e()[0],e()[e().length-1]],rt,(h,v,b)=>{var _=bt();lt(_,1,`x-tick x-tick--${b===0?"start":"end"}`,"svelte-1o1v576");var S=k(_),O=k(S),q=w(S,2),u=k(q);P(()=>{A(O,K(v)[n()]),A(u,K(v)[s()])}),$(h,_)}),P((h,v)=>{ut(m,h),ot(T,"d",v)},[()=>[e()[e().length-1]].map(h=>`right: 0; top: ${l(h[s()])}%;`)[0],()=>f(e())],B),$(i,p),z()}Y.__docgen={data:[{name:"data",visibility:"public",description:"Array of data in the format [{x: value, y: value}, etc]",keywords:[{name:"required",description:""}],kind:"let",type:{kind:"type",type:"array",text:"object[]"},static:!1,readonly:!1},{name:"xKey",visibility:"public",description:"Key for the X values",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:'"x"'},{name:"yKey",visibility:"public",description:"Key for the Y values",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:'"y"'}],name:"Sparkline.svelte"};var xt=C('<p class="ons-u-fs-s"> </p>'),$t=C('<p class="headline-figures__figure ons-u-fs-3xl ons-u-fs-2xl@m ons-u-mb-no"> </p>'),wt=C('<p class="headline-figures__supporting-text ons-u-fs-r ons-u-mt-2xs ons-u-mb-no"><!></p>'),Ct=C('<p class="ons-u-fs-s ons-u-mt-s ons-u-mb-no"> </p>'),St=C("<!> <!> <!> <!> <!>",1);function G(i,t){let e=y(t,"title",8,""),n=y(t,"subtitle",8,""),s=y(t,"href",8,""),r=y(t,"value",8,""),c=y(t,"mode",8,"number"),o=y(t,"caption",8,""),a=y(t,"data",8,null),l=y(t,"source",8,""),f=y(t,"cls",8,"");at(i,{get title(){return e()},get href(){return s()},mode:"featured",get cls(){return f()},children:(p,d)=>{var m=St(),x=R(m);{var T=u=>{var g=xt(),M=k(g);P(()=>A(M,n())),$(u,g)};N(x,u=>{n()&&u(T)})}var V=w(x,2);{var h=u=>{Y(u,{get data(){return a()}})};N(V,u=>{c()==="sparkline"&&a()&&u(h)})}var v=w(V,2);{var b=u=>{var g=$t(),M=k(g);P(()=>A(M,r())),$(u,g)};N(v,u=>{r()&&u(b)})}var _=w(v,2);{var S=u=>{var g=wt(),M=k(g);it(M,o),$(u,g)};N(_,u=>{o()&&u(S)})}var O=w(_,2);{var q=u=>{var g=Ct(),M=k(g);P(()=>A(M,l())),$(u,g)};N(O,u=>{l()&&u(q)})}$(p,m)},$$slots:{default:!0}})}G.__docgen={data:[{name:"title",visibility:"public",description:"Title of card",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:'""'},{name:"subtitle",visibility:"public",description:"Optional: Subtitle of card",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:'""'},{name:"href",visibility:"public",description:"Optional: URL link for card title",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:'""'},{name:"value",visibility:"public",description:"Big number (expects a pre-formatted text string)",keywords:[],kind:"let",type:{kind:"union",type:[{kind:"type",type:"string",text:"string"},{kind:"type",type:"number",text:"number"}],text:"string | number"},static:!1,readonly:!1,defaultValue:'""'},{name:"mode",visibility:"public",description:"Mode for the data tile",keywords:[],kind:"let",type:{kind:"union",type:[{kind:"const",type:"string",value:"number",text:'"number"'},{kind:"const",type:"string",value:"sparkline",text:'"sparkline"'},{kind:"const",type:"string",value:"bar",text:'"bar"'}],text:'"number" | "sparkline" | "bar"'},static:!1,readonly:!1,defaultValue:'"number"'},{name:"caption",visibility:"public",description:"Text caption describing the number",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:'""'},{name:"data",visibility:"public",description:"An array of data (required for charts)",keywords:[],kind:"let",type:{kind:"type",type:"array",text:"object[]"},static:!1,readonly:!1,defaultValue:"null"},{name:"source",visibility:"public",description:"Text describing the source of the data",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:'""'},{name:"cls",visibility:"public",description:"Optional: Set an additional CSS class for the component",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:'""'}],name:"DataCard.svelte"};const Mt=`A component for presenting key facts and figures as a grid of "cards".

Note: This component is experimental. Its attributes and options are likely to change. The intention is to include a range of simple chart types.

<!-- prettier-ignore -->
\`\`\`html
<script>
  import { DataCard } from "@onsvisual/svelte-components";
<\/script>

<DataCard
  title="Consumer Price Index (CPI)",
  value="up 2.5%",
  caption="in 12 months to December 2024",
  source="Source: ONS"
/>
\`\`\`
`,Dt=`For sparklines, an array of data needs to be passed into the component.

<!-- prettier-ignore -->
\`\`\`html
<script>
  import { DataCard } from "@onsvisual/svelte-components";

  const data = [
    { x: 1979, y: 7.19 },
    { x: 1980, y: 7.83 },
    { x: 1981, y: 7.24 },
    etc...
  ];
<\/script>

<DataCard
  title="Example sparkline",
  subtitle="Value in £ million"
  mode="sparkline"
  data={data}
  value="down 2.47",
  caption="Change from 1979 to 2016",
  source="Source: ONS"
/>
\`\`\`
`,Tt={title:"Data visualisation/DataCard",component:G,tags:["autodocs"],argTypes:{mode:{control:{type:"select"}}},parameters:W(Mt)},{Story:F}=et();var Vt=C("<!> <!>",1);function H(i,t){Z(t,!1),Q();var e=Vt(),n=R(e);F(n,{name:"Big number",args:{title:"Consumer Price Index (CPI)",value:"up 2.5%",caption:"in 12 months to December 2024",source:"Source: ONS"},parameters:{__svelteCsf:{rawCode:"<DataCard {...args} />"}}});var s=w(n,2);const r=B(()=>({title:"Example sparkline",subtitle:"Value in £ million",mode:"sparkline",data:dt.map(o=>({x:o.year,y:o.value})),value:"down 2.47",caption:"Change from 1979 to 2016",source:"Source: ONS"})),c=B(()=>nt(Dt));F(s,{name:"Sparkline",get args(){return K(r)},parameters:{...K(c),__svelteCsf:{rawCode:"<DataCard {...args} />"}}}),$(i,e),z()}H.__docgen={data:[],name:"DataCard.stories.svelte"};const J=tt(H,Tt),Zt=["BigNumber","Sparkline"],zt={...J.BigNumber,tags:["svelte-csf-v5"]},Qt={...J.Sparkline,tags:["svelte-csf-v5"]};export{zt as BigNumber,Qt as Sparkline,Zt as __namedExportsOrder,Tt as default};
