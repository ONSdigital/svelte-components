import{S as j,i as q,s as E,p as N,j as l,w as _,m as u,a as d,k as O,l as T,b as p,t as i,n as c,d as $,x as F,y as H}from"./index-98bb0bde.js";import{p as J,w as G,M as L,T as P,S as K}from"./collect-stories-cccca598.js";import{a as M}from"./Chart-fe68d808.js";import{d as x}from"./data-deeb1c5a.js";const I=`A column chart component with various modes, plus animation and events.

Note: This component is part of the **@onsvisual/svelte-charts** library. See [more examples here](https://onsvisual.github.io/svelte-charts/).

<!-- prettier-ignore -->
\`\`\`html
<script>
  import { ColumnChart } from "@onsvisual/svelte-charts";

  const data = [
    { year: 2017, value: 320 },
    { year: 2018, value: 640 },
    { year: 2019, value: 1600 },
    { year: 2020, value: 3840 },
  ];
<\/script>

<ColumnChart {data} xKey="value" yKey="year" title="Bar chart example" footer="Source: ONS." />
\`\`\`
`;function Q(y){let s,o,r;const f=[y[0]];let n={};for(let a=0;a<f.length;a+=1)n=N(n,f[a]);return o=new M({props:n}),{c(){s=F("div"),l(o.$$.fragment),H(s,"padding","12px")},m(a,m){d(a,s,m),u(o,s,null),r=!0},p(a,m){const S=m&1?O(f,[T(a[0])]):{};o.$set(S)},i(a){r||(p(o.$$.fragment,a),r=!0)},o(a){i(o.$$.fragment,a),r=!1},d(a){a&&$(s),c(o)}}}function R(y){let s,o,r,f,n,a,m,S,C,D,g,b,v,w;const k=[{title:"Data visualisation/ColumnChart"},{component:M},{argTypes:{mode:{options:["default","stacked","grouped","comparison","marker"],control:{type:"select"}}}},G(I)];let B={};for(let e=0;e<k.length;e+=1)B=N(B,k[e]);return s=new L({props:B}),r=new P({props:{$$slots:{default:[Q,({args:e})=>({0:e}),({args:e})=>e?1:0]},$$scope:{ctx:y}}}),n=new K({props:{name:"Default",args:{data:x.filter(U),xKey:"year",yKey:"value",title:"Simple bar chart",footer:"Source: ONS.",mode:"default"}}}),m=new K({props:{name:"Stacked columns",args:{data:x,xKey:"year",yKey:"value",zKey:"group",title:"Stacked bar chart",footer:"Source: ONS.",mode:"default"}}}),C=new K({props:{name:"Grouped columns",args:{data:x,xKey:"year",yKey:"value",zKey:"group",title:"Grouped bar chart",footer:"Source: ONS.",mode:"grouped"}}}),g=new K({props:{name:"Comparison markers",args:{data:x,xKey:"year",yKey:"value",zKey:"group",title:"Comparison marker chart",footer:"Source: ONS.",mode:"comparison"}}}),v=new K({props:{name:"Barcode",args:{data:x,xKey:"year",yKey:"value",zKey:"group",title:"Barcode chart",footer:"Source: ONS.",mode:"marker"}}}),{c(){l(s.$$.fragment),o=_(),l(r.$$.fragment),f=_(),l(n.$$.fragment),a=_(),l(m.$$.fragment),S=_(),l(C.$$.fragment),D=_(),l(g.$$.fragment),b=_(),l(v.$$.fragment)},m(e,t){u(s,e,t),d(e,o,t),u(r,e,t),d(e,f,t),u(n,e,t),d(e,a,t),u(m,e,t),d(e,S,t),u(C,e,t),d(e,D,t),u(g,e,t),d(e,b,t),u(v,e,t),w=!0},p(e,[t]){const z=t&0?O(k,[k[0],t&0&&{component:M},k[2],t&0&&T(G(I))]):{};s.$set(z);const A={};t&3&&(A.$$scope={dirty:t,ctx:e}),r.$set(A)},i(e){w||(p(s.$$.fragment,e),p(r.$$.fragment,e),p(n.$$.fragment,e),p(m.$$.fragment,e),p(C.$$.fragment,e),p(g.$$.fragment,e),p(v.$$.fragment,e),w=!0)},o(e){i(s.$$.fragment,e),i(r.$$.fragment,e),i(n.$$.fragment,e),i(m.$$.fragment,e),i(C.$$.fragment,e),i(g.$$.fragment,e),i(v.$$.fragment,e),w=!1},d(e){c(s,e),e&&$(o),c(r,e),e&&$(f),c(n,e),e&&$(a),c(m,e),e&&$(S),c(C,e),e&&$(D),c(g,e),e&&$(b),c(v,e)}}}const U=y=>y.group=="apples";class V extends j{constructor(s){super(),q(this,s,null,R,E,{})}}const h=J(V,{meta:{title:"Data visualisation/ColumnChart"},stories:{"tpl:default":{storyId:"data-visualisation-columnchart--default",name:"default",template:!0,source:`<div style:padding="12px">
  <ColumnChart {...args} />
</div>`,hasArgs:!0},Default:{storyId:"data-visualisation-columnchart--default",name:"Default",template:!1,hasArgs:!1},StackedColumns:{storyId:"data-visualisation-columnchart--stacked-columns",name:"Stacked columns",template:!1,hasArgs:!1},GroupedColumns:{storyId:"data-visualisation-columnchart--grouped-columns",name:"Grouped columns",template:!1,hasArgs:!1},ComparisonMarkers:{storyId:"data-visualisation-columnchart--comparison-markers",name:"Comparison markers",template:!1,hasArgs:!1},Barcode:{storyId:"data-visualisation-columnchart--barcode",name:"Barcode",template:!1,hasArgs:!1}},allocatedIds:["default","Meta","Template","Story","componentDocs","ColumnChart","data","withComponentDocs"]}),ee=h.meta,te=["Default","StackedColumns","GroupedColumns","ComparisonMarkers","Barcode"],ae=h.stories.Default,se=h.stories.StackedColumns,re=h.stories.GroupedColumns,oe=h.stories.ComparisonMarkers,ne=h.stories.Barcode;export{ne as Barcode,oe as ComparisonMarkers,ae as Default,re as GroupedColumns,se as StackedColumns,te as __namedExportsOrder,ee as default};
//# sourceMappingURL=ColumnChart.stories-08c5a69f.js.map
