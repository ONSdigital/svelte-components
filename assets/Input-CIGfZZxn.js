import{p as W,r as X,a as l,j as f,i as w,t as u,e as c,h as Y,k as V,n as d,o as L,q as A,u as C}from"./iframe-CjnhkhOY.js";import{i as Z}from"./create-runtime-stories-BoeWa_ka.js";import{s as t}from"./attributes-DG8kYAl2.js";import{s as y}from"./class-Dzh9Da8g.js";import{b as O}from"./input-C67uQwRS.js";var $=f("<label> </label>"),ee=f('<span class="ons-label__description ons-input--with-description"> </span>'),te=f('<span><span class="ons-input-type__inner"><input type="text"/> <abbr class="ons-input-type__type ons-js-input-abbr" role="figure"> </abbr></span></span>'),ie=f('<input type="text"/>'),ne=f("<div><!> <!> <!></div>");function ae(z,i){W(i,!1);const I=X();let s=l(i,"id",8,""),S=l(i,"value",12,""),E=l(i,"label",8,"Enter some text"),B=l(i,"hideLabel",8,!1),p=l(i,"description",8,""),F=l(i,"charLimit",8,null),b=l(i,"width",8,null),m=l(i,"prefix",8,""),x=l(i,"suffix",8,""),j=l(i,"unitLabel",24,()=>m()||x()||""),h=l(i,"pattern",8,""),v=l(i,"numeric",8,!1),q=l(i,"error",8,!1),G=l(i,"cls",8,"");Z();var g=ne(),D=d(g);{var H=n=>{var e=$();let r;var o=d(e);u(a=>{r=y(e,1,"ons-label",null,r,a),t(e,"aria-describedby",p()?`${s()}-description-hint`:null),t(e,"for",s()),A(o,E())},[()=>({"ons-label--with-description":p(),"ons-u-vh":B()})],L),c(n,e)};w(D,n=>{E()&&n(H)})}var N=V(D,2);{var J=n=>{var e=ee(),r=d(e);u(()=>{t(e,"id",`${s()??""}-description-hint`),A(r,p())}),c(n,e)};w(N,n=>{p()&&n(J)})}var K=V(N,2);{var M=n=>{var e=te();let r;var o=d(e),a=d(o);let T;var k=V(a,2),Q=d(k);u((_,R,U)=>{r=y(e,1,"ons-input-type",null,r,_),t(a,"id",s()),t(a,"maxlength",F()),t(a,"pattern",h()?h():v()?"[0-9]*":null),t(a,"inputmode",v()?"numeric":null),T=y(a,1,`ons-input ons-input--text ons-input-type__input ${R??""}`,null,T,U),t(a,"aria-labelledby",`${s()??""} ${s()??""}-unit`),t(a,"aria-describedby",p()?`${s()}-description-hint`:null),t(k,"id",`${s()??""}-unit`),t(k,"aria-label",j()),t(k,"title",j()),A(Q,m()||x())},[()=>({"ons-input-type--prefix":m()}),()=>Number.isInteger(b())?`ons-input--w-${b()}`:"",()=>({"ons-input--error":q()})],L),O(a,S),C("change",a,_=>I("change",_)),c(n,e)},P=n=>{var e=ie();let r;u((o,a)=>{t(e,"id",s()),t(e,"pattern",h()?h():v()?"[0-9]*":null),t(e,"inputmode",v()?"numeric":null),r=y(e,1,`ons-input ons-input--text ons-input-type__input ${o??""}`,null,r,a),t(e,"aria-describedby",p()?`${s()}-description-hint`:null)},[()=>Number.isInteger(b())?`ons-input--w-${b()}`:"",()=>({"ons-input--error":q()})],L),O(e,S),C("change",e,o=>I("change",o)),c(n,e)};w(K,n=>{m()||x()?n(M):n(P,!1)})}u(()=>y(g,1,`ons-field ${G()??""}`)),c(z,g),Y()}ae.__docgen={data:[{name:"id",visibility:"public",description:"ID for &lt;input&gt; element",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:'""'},{name:"value",visibility:"public",description:"A prop to bind to for the entered value",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:'""'},{name:"label",visibility:"public",description:"A label to describe the &lt;input&gt; element (expected for accessibility)",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:'"Enter some text"'},{name:"hideLabel",visibility:"public",description:"Visually hide the label",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1,defaultValue:"false"},{name:"description",visibility:"public",description:"An optional description to help users know what to enter",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:'""'},{name:"charLimit",visibility:"public",description:"The maximum number of characters that can be entered (optional)",keywords:[],kind:"let",type:{kind:"type",type:"number",text:"number"},static:!1,readonly:!1,defaultValue:"null"},{name:"width",visibility:"public",description:"The width of the &lt;input&gt; in characters",keywords:[],kind:"let",type:{kind:"type",type:"number",text:"number"},static:!1,readonly:!1,defaultValue:"null"},{name:"prefix",visibility:"public",description:"An optional prefix (eg. Â£) to appear on the left of the input",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:'""'},{name:"suffix",visibility:"public",description:"An optional suffix (eg. %) to appear on the right of the input",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:'""'},{name:"unitLabel",visibility:"public",description:"An optional hidden description of the prefix (for accessibility)",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:"..."},{name:"pattern",visibility:"public",description:"An optional regex pattern foto limit the input (not currently used)",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:'""'},{name:"numeric",visibility:"public",description:"Set to `true` if the value should be a number",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1,defaultValue:"false"},{name:"error",visibility:"public",description:"Set to `true` to highlight border in red",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1,defaultValue:"false"},{name:"cls",visibility:"public",description:"Optional: Set an additional CSS class for the component",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:'""'}],name:"Input.svelte"};export{ae as I};
