import{p as X,r as Y,a as n,j as f,i as w,t as u,e as y,h as Z,k as V,n as p,o as L,q as A,u as O}from"./iframe-CXTJ6QVU.js";import{i as $}from"./create-runtime-stories-BkuGQWvD.js";import{s as i}from"./attributes-BAN_2xp7.js";import{s as c}from"./class-Dzh9Da8g.js";import{b as z}from"./input-rkN_YJBG.js";var ee=f("<label> </label>"),te=f('<span class="ons-label__description ons-input--with-description"> </span>'),ie=f('<span><span class="ons-input-type__inner"><input type="text"/> <abbr class="ons-input-type__type ons-js-input-abbr" role="figure"> </abbr></span></span>'),le=f('<input type="text"/>'),ne=f("<div><!> <!> <!></div>");function ae(B,t){X(t,!1);const I=Y();let s=n(t,"id",8,null),S=n(t,"value",12,null),E=n(t,"label",8,"Enter some text"),F=n(t,"hideLabel",8,!1),d=n(t,"description",8,null),G=n(t,"charLimit",8,null),b=n(t,"width",8,null),m=n(t,"prefix",8,null),x=n(t,"suffix",8,null),j=n(t,"unitLabel",24,()=>m()||x()||""),h=n(t,"pattern",8,null),v=n(t,"numeric",8,!1),q=n(t,"disabled",8,!1),D=n(t,"error",8,!1),H=n(t,"cls",8,null);$();var g=ne(),N=p(g);{var J=a=>{var e=ee();let r;var o=p(e);u(l=>{r=c(e,1,"ons-label",null,r,l),i(e,"aria-describedby",d()?`${s()}-description-hint`:null),i(e,"for",s()),A(o,E())},[()=>({"ons-label--with-description":d(),"ons-u-vh":F()})],L),y(a,e)};w(N,a=>{E()&&a(J)})}var T=V(N,2);{var K=a=>{var e=te(),r=p(e);u(()=>{i(e,"id",`${s()??""}-description-hint`),A(r,d())}),y(a,e)};w(T,a=>{d()&&a(K)})}var M=V(T,2);{var P=a=>{var e=ie();let r;var o=p(e),l=p(o);let C;var k=V(l,2),R=p(k);u((_,U,W)=>{r=c(e,1,"ons-input-type",null,r,_),i(l,"id",s()),i(l,"maxlength",G()),i(l,"pattern",h()?h():v()?"[0-9]*":null),i(l,"inputmode",v()?"numeric":null),C=c(l,1,`ons-input ons-input--text ons-input-type__input ${U??""}`,null,C,W),i(l,"aria-labelledby",`${s()??""} ${s()??""}-unit`),i(l,"aria-describedby",d()?`${s()}-description-hint`:null),l.disabled=q(),i(k,"id",`${s()??""}-unit`),i(k,"aria-label",j()),i(k,"title",j()),A(R,m()||x())},[()=>({"ons-input-type--prefix":m()}),()=>Number.isInteger(b())?`ons-input--w-${b()}`:"",()=>({"ons-input--error":D()})],L),z(l,S),O("change",l,_=>I("change",_)),y(a,e)},Q=a=>{var e=le();let r;u((o,l)=>{i(e,"id",s()),i(e,"pattern",h()?h():v()?"[0-9]*":null),i(e,"inputmode",v()?"numeric":null),r=c(e,1,`ons-input ons-input--text ons-input-type__input ${o??""}`,null,r,l),i(e,"aria-describedby",d()?`${s()}-description-hint`:null),e.disabled=q()},[()=>Number.isInteger(b())?`ons-input--w-${b()}`:"",()=>({"ons-input--error":D()})],L),z(e,S),O("change",e,o=>I("change",o)),y(a,e)};w(M,a=>{m()||x()?a(P):a(Q,!1)})}u(()=>c(g,1,`ons-field ${H()??""}`)),y(B,g),Z()}ae.__docgen={data:[{name:"id",visibility:"public",description:"ID for &lt;input&gt; element",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:"null"},{name:"value",visibility:"public",description:"A prop to bind to for the entered value",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:"null"},{name:"label",visibility:"public",description:"A label to describe the &lt;input&gt; element (expected for accessibility)",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:'"Enter some text"'},{name:"hideLabel",visibility:"public",description:"Visually hide the label",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1,defaultValue:"false"},{name:"description",visibility:"public",description:"An optional description to help users know what to enter",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:"null"},{name:"charLimit",visibility:"public",description:"The maximum number of characters that can be entered (optional)",keywords:[],kind:"let",type:{kind:"type",type:"number",text:"number"},static:!1,readonly:!1,defaultValue:"null"},{name:"width",visibility:"public",description:"The width of the &lt;input&gt; in characters",keywords:[],kind:"let",type:{kind:"type",type:"number",text:"number"},static:!1,readonly:!1,defaultValue:"null"},{name:"prefix",visibility:"public",description:"An optional prefix (eg. Â£) to appear on the left of the input",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:"null"},{name:"suffix",visibility:"public",description:"An optional suffix (eg. %) to appear on the right of the input",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:"null"},{name:"unitLabel",visibility:"public",description:"An optional hidden description of the prefix (for accessibility)",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:"..."},{name:"pattern",visibility:"public",description:"An optional regex pattern foto limit the input (not currently used)",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:"null"},{name:"numeric",visibility:"public",description:"Set to `true` if the value should be a number",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1,defaultValue:"false"},{name:"disabled",visibility:"public",description:"Set to `true` to give the input a disabled state",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1,defaultValue:"false"},{name:"error",visibility:"public",description:"Set to `true` to highlight border in red",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1,defaultValue:"false"},{name:"cls",visibility:"public",description:"Optional: Set an additional CSS class for the component",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:"null"}],name:"Input.svelte"};export{ae as I};
